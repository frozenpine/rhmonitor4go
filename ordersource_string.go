// Code generated by "stringer -type OrderSource -linecomment"; DO NOT EDIT.

package rohon

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RH_TRADE_OSRC_Participant-48]
	_ = x[RH_TRADE_OSRC_Administrator-49]
	_ = x[RH_TRADE_OSRC_QryOrder-50]
	_ = x[RH_TRADE_OSRC_MonitorForceOrder-51]
	_ = x[RH_TRADE_OSRC_RiskForceOrder-52]
	_ = x[RH_TRADE_OSRC_MonitorThirdOrder-53]
	_ = x[RH_TRADE_OSRC_RealObjThirdOrder-54]
	_ = x[RH_TRADE_OSRC_ServerCondiOrder-55]
	_ = x[RH_TRADE_OSRC_ServerLossOrder-56]
	_ = x[RH_TRADE_OSRC_ServerProfitOrder-57]
	_ = x[RH_TRADE_OSRC_ServerLossEnsureOrder-107]
	_ = x[RH_TRADE_OSRC_ServerProfitEnsureOrder-108]
	_ = x[RH_TRADE_OSRC_ServerParkedOrder-109]
}

const (
	_OrderSource_name_0 = "来自参与者来自管理员查询报单来自于风控的强平单触发风险后的强平单风控端第三方报单资金账户外部报单后自动映射的报单服务器条件单服务器止损单服务器止盈单"
	_OrderSource_name_1 = "服务器止损追单服务器止盈追单服务器预埋单"
)

var (
	_OrderSource_index_0 = [...]uint8{0, 15, 30, 42, 69, 96, 120, 168, 186, 204, 222}
	_OrderSource_index_1 = [...]uint8{0, 21, 42, 60}
)

func (i OrderSource) String() string {
	switch {
	case 48 <= i && i <= 57:
		i -= 48
		return _OrderSource_name_0[_OrderSource_index_0[i]:_OrderSource_index_0[i+1]]
	case 107 <= i && i <= 109:
		i -= 107
		return _OrderSource_name_1[_OrderSource_index_1[i]:_OrderSource_index_1[i+1]]
	default:
		return "OrderSource(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
