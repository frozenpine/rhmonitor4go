// Code generated by "stringer -type OrderPriceType -linecomment"; DO NOT EDIT.

package rohon

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RH_TRADE_OPT_AnyPrice-49]
	_ = x[RH_TRADE_OPT_LimitPrice-50]
	_ = x[RH_TRADE_OPT_BestPrice-51]
	_ = x[RH_TRADE_OPT_LastPrice-52]
	_ = x[RH_TRADE_OPT_LastPricePlusOneTicks-53]
	_ = x[RH_TRADE_OPT_LastPricePlusTwoTicks-54]
	_ = x[RH_TRADE_OPT_LastPricePlusThreeTicks-55]
	_ = x[RH_TRADE_OPT_AskPrice1-56]
	_ = x[RH_TRADE_OPT_AskPrice1PlusOneTicks-57]
	_ = x[RH_TRADE_OPT_AskPrice1PlusTwoTicks-74]
	_ = x[RH_TRADE_OPT_AskPrice1PlusThreeTicks-75]
	_ = x[RH_TRADE_OPT_BidPrice1-76]
	_ = x[RH_TRADE_OPT_BidPrice1PlusOneTicks-77]
	_ = x[RH_TRADE_OPT_BidPrice1PlusTwoTicks-78]
	_ = x[RH_TRADE_OPT_BidPrice1PlusThreeTicks-79]
	_ = x[RH_TRADE_OPT_FiveLevelPrice-80]
	_ = x[RH_TRADE_STOPLOSS_MARKET-81]
	_ = x[RH_TRADE_STOPLOSS_LIMIT-82]
	_ = x[RH_TRADE_GTC_LIMIT-83]
	_ = x[RH_TRADE_STOCK_LEND-84]
	_ = x[RH_TRADE_STOCK_FINANCING_BUY-85]
	_ = x[RH_TRADE_REPAY_STOCK-86]
	_ = x[RH_TRADE_ETF_PURCHASE-87]
	_ = x[RH_TRADE_ETF_REDEMPTION-88]
}

const (
	_OrderPriceType_name_0 = "任意价限价最优价最新价最新价浮动上浮1个ticks最新价浮动上浮2个ticks最新价浮动上浮3个ticks卖一价卖一价浮动上浮1个ticks"
	_OrderPriceType_name_1 = "卖一价浮动上浮2个ticks卖一价浮动上浮3个ticks买一价买一价浮动上浮1个ticks买一价浮动上浮2个ticks买一价浮动上浮3个ticks五档价止损市价止损限价长效单一键锁券融资买入单现券还券单ETF申购ETF赎回"
)

var (
	_OrderPriceType_index_0 = [...]uint8{0, 9, 15, 24, 33, 63, 93, 123, 132, 162}
	_OrderPriceType_index_1 = [...]uint16{0, 30, 60, 69, 99, 129, 159, 168, 180, 192, 201, 213, 228, 243, 252, 261}
)

func (i OrderPriceType) String() string {
	switch {
	case 49 <= i && i <= 57:
		i -= 49
		return _OrderPriceType_name_0[_OrderPriceType_index_0[i]:_OrderPriceType_index_0[i+1]]
	case 74 <= i && i <= 88:
		i -= 74
		return _OrderPriceType_name_1[_OrderPriceType_index_1[i]:_OrderPriceType_index_1[i+1]]
	default:
		return "OrderPriceType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
